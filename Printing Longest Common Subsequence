#include<bits/stdc++.h>
using namespace std;

int longestCommonSubsequence(string s1, string s2,vector<vector<int>> &dp) {
    int n = s1.length();
    int m = s2.length();
    for(int i = 0; i < n;i++){
        dp[i][0] = 0;
    }
    for(int i = 0; i < m;i++){
        dp[0][i] = 0;
    }
    for(int i = 1; i <= n;i++){
        for(int j = 1; j <= m;j++){
            if(s1[i-1] == s2[j-1]){
                dp[i][j] = 1+dp[i-1][j-1];
            }
            else{
                dp[i][j] = max(dp[i-1][j], dp[i][j-1]);
            }
        }
    }
    return dp[n][m];
}

int main(){
    string s1,s2;
    cin>>s1>>s2;
    int n = s1.length();
    int m = s2.length();
    vector<vector<int>> dp(n+1,vector<int>(m+1));
    longestCommonSubsequence(s1,s2,dp);
    int i = n,j = m;
    string ans = "";
    while(i>0 && j >0){
        if(s1[i-1] == s2[j-1]){
            ans.push_back(s1[i-1]);
            i--;j--;
        }
        else{
            if(dp[i][j-1] > dp[i-1][j]){
                j--;
            }
            else{
                i--;
            }
        }
    }
    reverse(ans.begin(),ans.end());
    cout << ans << endl;
}
