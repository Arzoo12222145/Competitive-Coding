class Solution {
  public:
    /*  Function to implement Bellman Ford
     *   edges: vector of vectors which represents the graph
     *   S: source vertex to start traversing graph with
     *   V: number of vertices
     */
    vector<int> bellmanFord(int V, vector<vector<int>>& edges, int src) {
        vector<int> dist(V, 1e8);
        dist[src] = 0;
        
        for(int i = 1; i < V; i++){
            for(int j = 0; j < edges.size(); j++){
                int u = edges[j][0];
                int v = edges[j][1];
                int w = edges[j][2];
                
                if(dist[u] != 1e8 && (dist[u] + w < dist[v])){
                    dist[v] = dist[u] + w;
                }
            }
        }
        bool flag = false;
        for(int j = 0; j < edges.size(); j++){
                int u = edges[j][0];
                int v = edges[j][1];
                int w = edges[j][2];
                
                if(dist[u] != 1e8 && (dist[u] + w < dist[v])){
                    flag = true;
                    break;
                }
        }
        if(flag){
            return {-1};
        }
        return dist;
    }
};
